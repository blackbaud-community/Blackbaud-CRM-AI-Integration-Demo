Option Strict Off


   '*****************************************************************
   'Generated by SPCodeGen Â© 2003 Blackbaud CoreTech
   '*****************************************************************
<System.CodeDom.Compiler.GeneratedCodeAttribute("Blackbaud SPWrap", "2.0.0.7")> _
    <System.Serializable()> _
    Public MustInherit Class SPResultSetCollection
    'Base class for stored procs that return more than 1 result sets
    Implements ICloneable
    Implements ICollection

    Protected _results() As Array 'store results as an Array of Arrays

    Protected Sub New(ByVal resultCountUbound As Integer)
        ReDim _results(resultCountUbound)
    End Sub

    <System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Justification:="If a future SP returns multiple result sets the generated code would call this method.  If no sps return multiple resultsets then this method is never called.")> _
    Friend Sub InitResultSet(ByVal index As Integer, ByVal results As Array)

        _results(index) = results

    End Sub

    Protected Function CloneResult() As SPResultSetCollection

        Dim m As New IO.MemoryStream
        Dim bf As New System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
        bf.Serialize(m, Me)
        m.Position = 0

        Dim cloneValue As SPResultSetCollection
        cloneValue = bf.Deserialize(m)
        m.Close()

        Return cloneValue

    End Function

    Private Function CloneData() As Object Implements System.ICloneable.Clone
        Return Me.CloneResult
    End Function

    Private Sub CopyTo(ByVal array As System.Array, ByVal index As Integer) Implements System.Collections.ICollection.CopyTo
        _results.CopyTo(array, index)
    End Sub

    Public ReadOnly Property Count() As Integer Implements System.Collections.ICollection.Count
        Get
            Return _results.Length
        End Get
    End Property

    Private ReadOnly Property IsSynchronized() As Boolean Implements System.Collections.ICollection.IsSynchronized
        Get
            Return _results.IsSynchronized
        End Get
    End Property

    Private ReadOnly Property SyncRoot() As Object Implements System.Collections.ICollection.SyncRoot
        Get
            Return _results.SyncRoot
        End Get
    End Property

    Private Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
        Return _results.GetEnumerator
    End Function

End Class

<System.CodeDom.Compiler.GeneratedCodeAttribute("Blackbaud SPWrap", "2.0.0.7")> _
    <Serializable()> Public MustInherit Class SPResultSetDataRow

    Protected _data() As Object

    Protected Sub New()
    End Sub


    Protected Sub New(ByVal upperBound As Integer, ByVal initDBNull As Boolean)
        ReDim _data(upperBound)
        If initDBNull Then
            For i As Integer = 0 To upperBound
                _data(i) = DBNull.Value
            Next
        End If
    End Sub


    Protected Shared Function ObjIsNull(ByVal o As Object) As Boolean

        If (o Is Nothing) OrElse (o Is DBNull.Value) Then
            Return True
        End If

        Return False

    End Function

    Protected Overloads Function GetValueIfNull(Of T)(ByVal index As Integer, ByVal valIfNull As T) As T

        Dim o As Object = _data(index)

        If (o Is Nothing) OrElse (o Is DBNull.Value) Then
            Return valIfNull
        Else
            Return DirectCast(o, T)
        End If

    End Function


    Protected Overloads Function GetValueIfNull(ByVal index As Integer, ByVal valIfNull As Object) As Object

        Dim o As Object = _data(index)

        If (o Is Nothing) OrElse (o Is DBNull.Value) Then
            Return valIfNull
        Else
            Return o
        End If

    End Function


    Protected Function CloneData() As SPResultSetDataRow

        Dim m As New IO.MemoryStream
        Dim bf As New System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
        bf.Serialize(m, Me)
        m.Position = 0

        Dim cloneValue As SPResultSetDataRow
        cloneValue = bf.Deserialize(m)
        m.Close()

        Return cloneValue

    End Function

    <System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Reliability", "CA2000:DisposeObjectsBeforeLosingScope")> _
    Private Function ToXML() As String
        Dim x As Xml.Serialization.XmlSerializer

        x = New Xml.Serialization.XmlSerializer(Me.GetType)

        Dim m As New IO.MemoryStream
        Dim sw As IO.StreamWriter

        sw = New IO.StreamWriter(m, System.Text.UTF8Encoding.UTF8)

        x.Serialize(sw, Me)
        m.Position = 0

        Dim sr As New IO.StreamReader(m)
        Dim s As String = sr.ReadToEnd()
        sr.Close()
        m.Close()

        Return s

    End Function


    Public Overrides Function ToString() As String
        Return Me.ToXML()
    End Function


    'Private Sub Clear() 
    '    For i As Integer = 0 To UBound(_data)
    '        _data(i) = DBNull.Value
    '    Next
    'End Sub

End Class

